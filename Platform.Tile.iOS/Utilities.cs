using System;using System.Collections.Generic;using System.Linq;using System.Text;using Foundation;using UIKit;using Moduware.Platform.Tile.Types;using System.Threading.Tasks;namespace Moduware.Platform.Tile.iOS{    class Utilities : IUtilities    {        Action<Action> _runOnUIThread;        public Utilities(Action<Action> runOnUiThread)        {            _runOnUIThread = runOnUiThread;        }        public void OpenDashboard(string request = "")        {            var url = "moduware.application.dashboard://" + request;            _runOnUIThread(() =>            {                if (UIApplication.SharedApplication.CanOpenUrl(new NSUrl(url)))                {                    UIApplication.SharedApplication.OpenUrl(new NSUrl(url));                }            });        }        public async void ShowNotConnectedAlert(Action callback)        {            await ShowAlertAsync("Not connected", "You are not connected to any moduware device, please search and connect to one.", "OK");            callback();         }        public async void ShowNoSupportedModuleAlert(Action callback)        {            await ShowAlertAsync("No module", "No modules supported by this tile plugged in, please insert one to use tile.", "OK");            callback();
        }        public Task ShowAlertAsync(string title, string message, string buttonText)        {            var t = new TaskCompletionSource<bool>();            _runOnUIThread(async () =>            {                var alert = UIAlertController.Create(title, message, UIAlertControllerStyle.Alert);                alert.AddAction(UIAlertAction.Create(buttonText, UIAlertActionStyle.Default, (action) => {                    t.TrySetResult(true);                }));                //Let javascript handle the OK click by passing the completionHandler to the controller                await UIApplication.SharedApplication.KeyWindow.RootViewController.DismissViewControllerAsync(false);                UIApplication.SharedApplication.KeyWindow.RootViewController.PresentViewController(alert, true, null);            });            return t.Task;        }    }}